apiVersion: apps/v1
kind: Deployment
metadata:
  name: fake-services
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fake-services
  template:
    metadata:
      labels:
        app: fake-services
    spec:
      containers:
        - name: fake-services
          image: 242201290994.dkr.ecr.eu-central-1.amazonaws.com/fake-services:LATEST_SHA
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          resources:
            requests:
              cpu: "150m"   # Reduced CPU request to match actual usage
              memory: "512Mi"  # Keeps memory stable
            limits:
              cpu: "500m"   # Provides some headroom for bursts
              memory: "2048Mi"
          envFrom:
            - configMapRef:
                name: fake-services-config
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 4
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 4
            timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: fake-services
  namespace: default
spec:
  selector:
    app: fake-services
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fake-services-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fake-services
  minReplicas: 2
  maxReplicas: 6
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 20  # Prevents over-scaling
      policies:
        - type: Percent
          value: 50  # Increase pods by 50% per step
          periodSeconds: 60
        - type: Pods
          value: 1   # Add 1 pod at a time
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 120  # Prevents unnecessary pod removals
      policies:
        - type: Percent
          value: 10  # Scale down gradually
          periodSeconds: 120
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50  # Ensures proper CPU scaling
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 70  # Ensures memory-based scaling
